// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package sqlserveriface provides an interface to enable mocking the sqlserver service client
// for testing your code.
//
// It is important to note that this interface will have breaking changes
// when the service model is updated and adds new API operations, paginators,
// and waiters.
package sqlserveriface

import (
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/ksc/ksc-sdk-go/service/sqlserver"
)

// SqlserverAPI provides an interface to enable mocking the
// sqlserver.Sqlserver service client's API operation,
// paginators, and waiters. This make unit testing your code that calls out
// to the SDK's service client's calls easier.
//
// The best way to use this interface is so the SDK's service client's calls
// can be stubbed out for unit testing your code with the SDK without needing
// to inject custom request handlers into the SDK's request pipeline.
//
//    // myFunc uses an SDK service client to make a request to
//    // sqlserver.
//    func myFunc(svc sqlserveriface.SqlserverAPI) bool {
//        // Make svc.CloneSecurityGroup request
//    }
//
//    func main() {
//        sess := session.New()
//        svc := sqlserver.New(sess)
//
//        myFunc(svc)
//    }
//
// In your _test.go file:
//
//    // Define a mock struct to be used in your unit tests of myFunc.
//    type mockSqlserverClient struct {
//        sqlserveriface.SqlserverAPI
//    }
//    func (m *mockSqlserverClient) CloneSecurityGroup(input *map[string]interface{}) (*map[string]interface{}, error) {
//        // mock response/functionality
//    }
//
//    func TestMyFunc(t *testing.T) {
//        // Setup Test
//        mockSvc := &mockSqlserverClient{}
//
//        myfunc(mockSvc)
//
//        // Verify myFunc's functionality
//    }
//
// It is important to note that this interface will have breaking changes
// when the service model is updated and adds new API operations, paginators,
// and waiters. Its suggested to use the pattern above for testing, or using
// tooling to generate mocks to satisfy the interfaces.
type SqlserverAPI interface {
	CloneSecurityGroup(*map[string]interface{}) (*map[string]interface{}, error)
	CloneSecurityGroupWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	CloneSecurityGroupRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	CreateDBInstance(*map[string]interface{}) (*map[string]interface{}, error)
	CreateDBInstanceWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	CreateDBInstanceRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	CreateSecurityGroup(*map[string]interface{}) (*map[string]interface{}, error)
	CreateSecurityGroupWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	CreateSecurityGroupRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	DeleteDBInstance(*map[string]interface{}) (*map[string]interface{}, error)
	DeleteDBInstanceWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	DeleteDBInstanceRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	DeleteSecurityGroup(*map[string]interface{}) (*map[string]interface{}, error)
	DeleteSecurityGroupWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	DeleteSecurityGroupRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	DescribeDBInstances(*map[string]interface{}) (*map[string]interface{}, error)
	DescribeDBInstancesWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	DescribeDBInstancesRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	DescribeSecurityGroup(*map[string]interface{}) (*map[string]interface{}, error)
	DescribeSecurityGroupWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	DescribeSecurityGroupRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	ModifyDBInstance(*map[string]interface{}) (*map[string]interface{}, error)
	ModifyDBInstanceWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	ModifyDBInstanceRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	ModifySecurityGroup(*map[string]interface{}) (*map[string]interface{}, error)
	ModifySecurityGroupWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	ModifySecurityGroupRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	ModifySecurityGroupRule(*map[string]interface{}) (*map[string]interface{}, error)
	ModifySecurityGroupRuleWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	ModifySecurityGroupRuleRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	ModifySecurityGroupRuleName(*map[string]interface{}) (*map[string]interface{}, error)
	ModifySecurityGroupRuleNameWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	ModifySecurityGroupRuleNameRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	SecurityGroupRelation(*map[string]interface{}) (*map[string]interface{}, error)
	SecurityGroupRelationWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	SecurityGroupRelationRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	StatisticDBInstances(*map[string]interface{}) (*map[string]interface{}, error)
	StatisticDBInstancesWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	StatisticDBInstancesRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})
}

var _ SqlserverAPI = (*sqlserver.Sqlserver)(nil)
