// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package pdnsiface provides an interface to enable mocking the pdns service client
// for testing your code.
//
// It is important to note that this interface will have breaking changes
// when the service model is updated and adds new API operations, paginators,
// and waiters.
package pdnsiface

import (
	"github.com/KscSDK/ksc-sdk-go/service/pdns"
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
)

// PdnsAPI provides an interface to enable mocking the
// pdns.Pdns service client's API operation,
// paginators, and waiters. This make unit testing your code that calls out
// to the SDK's service client's calls easier.
//
// The best way to use this interface is so the SDK's service client's calls
// can be stubbed out for unit testing your code with the SDK without needing
// to inject custom request handlers into the SDK's request pipeline.
//
//    // myFunc uses an SDK service client to make a request to
//    // pdns.
//    func myFunc(svc pdnsiface.PdnsAPI) bool {
//        // Make svc.BindZoneVpc request
//    }
//
//    func main() {
//        sess := session.New()
//        svc := pdns.New(sess)
//
//        myFunc(svc)
//    }
//
// In your _test.go file:
//
//    // Define a mock struct to be used in your unit tests of myFunc.
//    type mockPdnsClient struct {
//        pdnsiface.PdnsAPI
//    }
//    func (m *mockPdnsClient) BindZoneVpc(input *map[string]interface{}) (*map[string]interface{}, error) {
//        // mock response/functionality
//    }
//
//    func TestMyFunc(t *testing.T) {
//        // Setup Test
//        mockSvc := &mockPdnsClient{}
//
//        myfunc(mockSvc)
//
//        // Verify myFunc's functionality
//    }
//
// It is important to note that this interface will have breaking changes
// when the service model is updated and adds new API operations, paginators,
// and waiters. Its suggested to use the pattern above for testing, or using
// tooling to generate mocks to satisfy the interfaces.
type PdnsAPI interface {
	BindZoneVpc(*map[string]interface{}) (*map[string]interface{}, error)
	BindZoneVpcWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	BindZoneVpcRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	CreatePdnsZone(*map[string]interface{}) (*map[string]interface{}, error)
	CreatePdnsZoneWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	CreatePdnsZoneRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	CreateZoneRecord(*map[string]interface{}) (*map[string]interface{}, error)
	CreateZoneRecordWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	CreateZoneRecordRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	DeletePdnsZone(*map[string]interface{}) (*map[string]interface{}, error)
	DeletePdnsZoneWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	DeletePdnsZoneRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	DeleteZoneRecord(*map[string]interface{}) (*map[string]interface{}, error)
	DeleteZoneRecordWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	DeleteZoneRecordRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	DescribePdnsZones(*map[string]interface{}) (*map[string]interface{}, error)
	DescribePdnsZonesWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	DescribePdnsZonesRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	DescribeZoneRecord(*map[string]interface{}) (*map[string]interface{}, error)
	DescribeZoneRecordWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	DescribeZoneRecordRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	ModifyPdnsZone(*map[string]interface{}) (*map[string]interface{}, error)
	ModifyPdnsZoneWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	ModifyPdnsZoneRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	ModifyZoneRecord(*map[string]interface{}) (*map[string]interface{}, error)
	ModifyZoneRecordWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	ModifyZoneRecordRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	UnbindZoneVpc(*map[string]interface{}) (*map[string]interface{}, error)
	UnbindZoneVpcWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	UnbindZoneVpcRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})
}

var _ PdnsAPI = (*pdns.Pdns)(nil)
