// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package kisv1iface provides an interface to enable mocking the kisv1 service client
// for testing your code.
//
// It is important to note that this interface will have breaking changes
// when the service model is updated and adds new API operations, paginators,
// and waiters.
package kisv1iface

import (
	"github.com/KscSDK/ksc-sdk-go/service/kisv1"
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
)

// Kisv1API provides an interface to enable mocking the
// kisv1.Kisv1 service client's API operation,
// paginators, and waiters. This make unit testing your code that calls out
// to the SDK's service client's calls easier.
//
// The best way to use this interface is so the SDK's service client's calls
// can be stubbed out for unit testing your code with the SDK without needing
// to inject custom request handlers into the SDK's request pipeline.
//
//    // myFunc uses an SDK service client to make a request to
//    // kisv1.
//    func myFunc(svc kisv1iface.Kisv1API) bool {
//        // Make svc.GetBandwidth request
//    }
//
//    func main() {
//        sess := session.New()
//        svc := kisv1.New(sess)
//
//        myFunc(svc)
//    }
//
// In your _test.go file:
//
//    // Define a mock struct to be used in your unit tests of myFunc.
//    type mockKisv1Client struct {
//        kisv1iface.Kisv1API
//    }
//    func (m *mockKisv1Client) GetBandwidth(input *map[string]interface{}) (*map[string]interface{}, error) {
//        // mock response/functionality
//    }
//
//    func TestMyFunc(t *testing.T) {
//        // Setup Test
//        mockSvc := &mockKisv1Client{}
//
//        myfunc(mockSvc)
//
//        // Verify myFunc's functionality
//    }
//
// It is important to note that this interface will have breaking changes
// when the service model is updated and adds new API operations, paginators,
// and waiters. Its suggested to use the pattern above for testing, or using
// tooling to generate mocks to satisfy the interfaces.
type Kisv1API interface {
	GetBandwidth(*map[string]interface{}) (*map[string]interface{}, error)
	GetBandwidthWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	GetBandwidthRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	GetCabinet(*map[string]interface{}) (*map[string]interface{}, error)
	GetCabinetWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	GetCabinetRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	GetDevice(*map[string]interface{}) (*map[string]interface{}, error)
	GetDeviceWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	GetDeviceRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	GetDp(*map[string]interface{}) (*map[string]interface{}, error)
	GetDpWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	GetDpRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	GetInternetPort(*map[string]interface{}) (*map[string]interface{}, error)
	GetInternetPortWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	GetInternetPortRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	GetIpaddrData(*map[string]interface{}) (*map[string]interface{}, error)
	GetIpaddrDataWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	GetIpaddrDataRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	GetMonitorData(*map[string]interface{}) (*map[string]interface{}, error)
	GetMonitorDataWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	GetMonitorDataRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	GetSubnet(*map[string]interface{}) (*map[string]interface{}, error)
	GetSubnetWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	GetSubnetRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	GetVpcAccess(*map[string]interface{}) (*map[string]interface{}, error)
	GetVpcAccessWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	GetVpcAccessRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	ListDeviceProductType(*map[string]interface{}) (*map[string]interface{}, error)
	ListDeviceProductTypeWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	ListDeviceProductTypeRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	ListDpAddress(*map[string]interface{}) (*map[string]interface{}, error)
	ListDpAddressWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	ListDpAddressRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	ListDpClassify(*map[string]interface{}) (*map[string]interface{}, error)
	ListDpClassifyWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	ListDpClassifyRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	ListIdc(*map[string]interface{}) (*map[string]interface{}, error)
	ListIdcWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	ListIdcRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	ListIsp(*map[string]interface{}) (*map[string]interface{}, error)
	ListIspWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	ListIspRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	ListMonitorProductType(*map[string]interface{}) (*map[string]interface{}, error)
	ListMonitorProductTypeWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	ListMonitorProductTypeRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	ListRegion(*map[string]interface{}) (*map[string]interface{}, error)
	ListRegionWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	ListRegionRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	ListStep(*map[string]interface{}) (*map[string]interface{}, error)
	ListStepWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	ListStepRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})
}

var _ Kisv1API = (*kisv1.Kisv1)(nil)
