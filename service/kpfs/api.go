// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package kpfs

import (
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
)



const opDescribePerformanceOnePosixAclList = "DescribePerformanceOnePosixAclList"

func (c *Kpfs) DescribePerformanceOnePosixAclListRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribePerformanceOnePosixAclList,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}
	if input == nil {
		input = &map[string]interface{}{}
	}
	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)
	return
}

func (c *Kpfs) DescribePerformanceOnePosixAclList(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribePerformanceOnePosixAclListRequest(input)
	return out, req.Send()
}

func (c *Kpfs) DescribePerformanceOnePosixAclWithContext(ctx aws.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribePerformanceOnePosixAclListRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}


const opUpdatePerformanceOnePosixAcl = "UpdatePerformanceOnePosixAcl"

func (c *Kpfs) UpdatePerformanceOnePosixAclRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opUpdatePerformanceOnePosixAcl,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}
	if input == nil {
		input = &map[string]interface{}{}
	}
	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)
	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")
	return
}

func (c *Kpfs) UpdatePerformanceOnePosixAcl(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.UpdatePerformanceOnePosixAclRequest(input)
	return out, req.Send()
}

func (c *Kpfs) UpdatePerformanceOnePosixAclWithContext(ctx aws.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.UpdatePerformanceOnePosixAclRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}


const opDeletePerformanceOnePosixAcl = "DeletePerformanceOnePosixAcl"

func (c *Kpfs) DeletePerformanceOnePosixAclRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDeletePerformanceOnePosixAcl,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}
	if input == nil {
		input = &map[string]interface{}{}
	}
	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)
	return
}


func (c *Kpfs) DeletePerformanceOnePosixAcl(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DeletePerformanceOnePosixAclRequest(input)
	return out, req.Send()
}

func (c *Kpfs) DeletePerformanceOnePosixAclWithContext(ctx aws.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DeletePerformanceOnePosixAclRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

