// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package kpfsiface provides an interface to enable mocking the kpfs service client
// for testing your code.
//
// It is important to note that this interface will have breaking changes
// when the service model is updated and adds new API operations, paginators,
// and waiters.
package kpfsiface

import (
	"github.com/KscSDK/ksc-sdk-go/service/kpfs"
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
)

// KpfsAPI provides an interface to enable mocking the
// kpfs.Kpfs service client's API operation,
// paginators, and waiters. This make unit testing your code that calls out
// to the SDK's service client's calls easier.
//
// The best way to use this interface is so the SDK's service client's calls
// can be stubbed out for unit testing your code with the SDK without needing
// to inject custom request handlers into the SDK's request pipeline.
//
//	// myFunc uses an SDK service client to make a request to
//	// kpfs.
//	func myFunc(svc kpfsiface.KpfsAPI) bool {
//	    // Make svc.DeletePerformanceOnePosixAcl request
//	}
//
//	func main() {
//	    sess := session.New()
//	    svc := kpfs.New(sess)
//
//	    myFunc(svc)
//	}
//
// In your _test.go file:
//
//	// Define a mock struct to be used in your unit tests of myFunc.
//	type mockKpfsClient struct {
//	    kpfsiface.KpfsAPI
//	}
//	func (m *mockKpfsClient) DeletePerformanceOnePosixAcl(input *map[string]interface{}) (*map[string]interface{}, error) {
//	    // mock response/functionality
//	}
//
//	func TestMyFunc(t *testing.T) {
//	    // Setup Test
//	    mockSvc := &mockKpfsClient{}
//
//	    myfunc(mockSvc)
//
//	    // Verify myFunc's functionality
//	}
//
// It is important to note that this interface will have breaking changes
// when the service model is updated and adds new API operations, paginators,
// and waiters. Its suggested to use the pattern above for testing, or using
// tooling to generate mocks to satisfy the interfaces.
type KpfsAPI interface {
	DeletePerformanceOnePosixAcl(*map[string]interface{}) (*map[string]interface{}, error)
	DeletePerformanceOnePosixAclWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	DeletePerformanceOnePosixAclRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	DescribePerformanceOnePosixAclList(*map[string]interface{}) (*map[string]interface{}, error)
	DescribePerformanceOnePosixAclListWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	DescribePerformanceOnePosixAclListRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	UpdatePerformanceOnePosixAcl(*map[string]interface{}) (*map[string]interface{}, error)
	UpdatePerformanceOnePosixAclWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	UpdatePerformanceOnePosixAclRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})
}

var _ KpfsAPI = (*kpfs.Kpfs)(nil)
