// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package kceiface provides an interface to enable mocking the kce service client
// for testing your code.
//
// It is important to note that this interface will have breaking changes
// when the service model is updated and adds new API operations, paginators,
// and waiters.
package kceiface

import (
	"github.com/KscSDK/ksc-sdk-go/service/kce"
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
)

// KceAPI provides an interface to enable mocking the
// kce.Kce service client's API operation,
// paginators, and waiters. This make unit testing your code that calls out
// to the SDK's service client's calls easier.
//
// The best way to use this interface is so the SDK's service client's calls
// can be stubbed out for unit testing your code with the SDK without needing
// to inject custom request handlers into the SDK's request pipeline.
//
//	// myFunc uses an SDK service client to make a request to
//	// kce.
//	func myFunc(svc kceiface.KceAPI) bool {
//	    // Make svc.AddClusterEpcInstances request
//	}
//
//	func main() {
//	    sess := session.New()
//	    svc := kce.New(sess)
//
//	    myFunc(svc)
//	}
//
// In your _test.go file:
//
//	// Define a mock struct to be used in your unit tests of myFunc.
//	type mockKceClient struct {
//	    kceiface.KceAPI
//	}
//	func (m *mockKceClient) AddClusterEpcInstances(input *map[string]interface{}) (*map[string]interface{}, error) {
//	    // mock response/functionality
//	}
//
//	func TestMyFunc(t *testing.T) {
//	    // Setup Test
//	    mockSvc := &mockKceClient{}
//
//	    myfunc(mockSvc)
//
//	    // Verify myFunc's functionality
//	}
//
// It is important to note that this interface will have breaking changes
// when the service model is updated and adds new API operations, paginators,
// and waiters. Its suggested to use the pattern above for testing, or using
// tooling to generate mocks to satisfy the interfaces.
type KceAPI interface {
	AddClusterEpcInstances(*map[string]interface{}) (*map[string]interface{}, error)
	AddClusterEpcInstancesWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	AddClusterEpcInstancesRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	AddClusterInstanceToNodePool(*map[string]interface{}) (*map[string]interface{}, error)
	AddClusterInstanceToNodePoolWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	AddClusterInstanceToNodePoolRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	AddClusterInstances(*map[string]interface{}) (*map[string]interface{}, error)
	AddClusterInstancesWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	AddClusterInstancesRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	AddExistedInstances(*map[string]interface{}) (*map[string]interface{}, error)
	AddExistedInstancesWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	AddExistedInstancesRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	CreateCluster(*map[string]interface{}) (*map[string]interface{}, error)
	CreateClusterWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	CreateClusterRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	CreateNodePool(*map[string]interface{}) (*map[string]interface{}, error)
	CreateNodePoolWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	CreateNodePoolRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	DeleteCluster(*map[string]interface{}) (*map[string]interface{}, error)
	DeleteClusterWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	DeleteClusterRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	DeleteClusterInstances(*map[string]interface{}) (*map[string]interface{}, error)
	DeleteClusterInstancesWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	DeleteClusterInstancesRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	DeleteClusterInstancesFromNodePool(*map[string]interface{}) (*map[string]interface{}, error)
	DeleteClusterInstancesFromNodePoolWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	DeleteClusterInstancesFromNodePoolRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	DeleteComponentInstance(*map[string]interface{}) (*map[string]interface{}, error)
	DeleteComponentInstanceWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	DeleteComponentInstanceRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	DeleteNodePool(*map[string]interface{}) (*map[string]interface{}, error)
	DeleteNodePoolWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	DeleteNodePoolRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	DescribeCluster(*map[string]interface{}) (*map[string]interface{}, error)
	DescribeClusterWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	DescribeClusterRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	DescribeClusterInstance(*map[string]interface{}) (*map[string]interface{}, error)
	DescribeClusterInstanceWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	DescribeClusterInstanceRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	DescribeComponent(*map[string]interface{}) (*map[string]interface{}, error)
	DescribeComponentWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	DescribeComponentRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	DescribeEpcForCluster(*map[string]interface{}) (*map[string]interface{}, error)
	DescribeEpcForClusterWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	DescribeEpcForClusterRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	DescribeEpcImage(*map[string]interface{}) (*map[string]interface{}, error)
	DescribeEpcImageWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	DescribeEpcImageRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	DescribeExistedInstances(*map[string]interface{}) (*map[string]interface{}, error)
	DescribeExistedInstancesWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	DescribeExistedInstancesRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	DescribeInstanceImage(*map[string]interface{}) (*map[string]interface{}, error)
	DescribeInstanceImageWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	DescribeInstanceImageRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	DescribeNodePool(*map[string]interface{}) (*map[string]interface{}, error)
	DescribeNodePoolWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	DescribeNodePoolRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	DownloadClusterConfig(*map[string]interface{}) (*map[string]interface{}, error)
	DownloadClusterConfigWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	DownloadClusterConfigRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	ForceRemoveClusterInstance(*map[string]interface{}) (*map[string]interface{}, error)
	ForceRemoveClusterInstanceWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	ForceRemoveClusterInstanceRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	InstallComponent(*map[string]interface{}) (*map[string]interface{}, error)
	InstallComponentWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	InstallComponentRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	ModifyClusterInfo(*map[string]interface{}) (*map[string]interface{}, error)
	ModifyClusterInfoWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	ModifyClusterInfoRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	ModifyNodePool(*map[string]interface{}) (*map[string]interface{}, error)
	ModifyNodePoolWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	ModifyNodePoolRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	ModifyNodePoolScaleDownPolicy(*map[string]interface{}) (*map[string]interface{}, error)
	ModifyNodePoolScaleDownPolicyWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	ModifyNodePoolScaleDownPolicyRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	ModifyNodePoolScaleUpPolicy(*map[string]interface{}) (*map[string]interface{}, error)
	ModifyNodePoolScaleUpPolicyWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	ModifyNodePoolScaleUpPolicyRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	ModifyNodeTemplate(*map[string]interface{}) (*map[string]interface{}, error)
	ModifyNodeTemplateWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	ModifyNodeTemplateRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	ProtectedFromScaleDown(*map[string]interface{}) (*map[string]interface{}, error)
	ProtectedFromScaleDownWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	ProtectedFromScaleDownRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	UpdateComponentInstance(*map[string]interface{}) (*map[string]interface{}, error)
	UpdateComponentInstanceWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	UpdateComponentInstanceRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})
}

var _ KceAPI = (*kce.Kce)(nil)
